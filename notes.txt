Main idea: Check out top restricted meta threats as we approach reg I.


GAMEPLAN (when brain is dead make readme)
    Thursday
        make gameplan
        think of impetus - Pokemon! Of course!!!
        preliminary thoughts on data structuring
        noodle with the starter code
    Friday
        get raw JSON file set up 
        use starter code card system to display every mon
            maybe card just shows name, sprite, and stats.
        get rid of header, make side menu
    Saturday
        set up functionality of side menu
        order cards by
            ID
            name
            every stat 
            etc
    Sunday
        I think that I work all day
    Monday
        be able to click on card to go to detail view
            moves
            abilitites
            etc
    Tuesday
        polish day. Make it look good
        add mobile responsiveness
        stretch goals day
            side by side compare
                use footer to show combined weaknesses/ efficacies






Data Structures:
    Pokemon
        file with JSON of every contending mon
        Class that will hold necessary Pokemon data in a more organized fashion
            string name
            string abilityName
            string abilityDescription
            int stats (all 6)
            moves in details will be a stretch goal
            there are so many moves, make a move class. move objects in an array 
                (maybe I'm moving in the wrong direction since I would make )
                (maybe this is a stretch goal - and just do vector of strings moveNames)
                int basePower
                int accuracy
                string type
                string secondary effects
            map for weaknesses/resistanes (instead of mapping every individual I think I need to make a private static function that will generate this based on type)
                key string type
                value int multiplier
            map for supereffective/ineffective STAB (shows best case)(also look into function that does this and fills it out)
                key type
                value multiplier
            QUESTION How will I handle forms? perhaps just diff names
            int ID number (could be used for hashing as it is unique)
            int weight
            string urlToSprite
            string type1
            string type2 (have logic for if type2 = null)
        function in main will dynamically create every instance
    perhaps a map with a key of names and values of their respective objects? 
        for search?








Layout:
    I think that a header is unneccessary. Just gaudy and dare I say, vainglorious? I think more appropriate would be a menu on the side that will hold all of our filter and search functionality. If I get to compare two mon(honestly, seems really easy once we can search for one), move the two menus back to back in the middle.

    For mobile, make the side menu collapsible via a button. Also, all vertical. Replace side by sidecomparison possibly with a swipe? I haven't done that before... I like the classic hamburger symbol for the collapsible side menu hahah

    In the main section we will have cards just like in the starter code. Perhaps I will use grid to arrange it? And then make the grid responsive to size change?
        









FIle structure:
    root
        main.js (replace script.js, sorry!)
        style.css
        index.html
        Pokemon.js
        Move.js






+++++Restricted Meta threats+++++
    kyogre
        11193
    groudon
        22734
    lunala
        36799
    zacian - crowned
        41060
    zamazenta - crowned
        43237
    calyrex ice rider
        45526
    calyrex shadow rider
        49099
    koraidon
        1523
    miraidon
        2
    terapagos terastal
        52436
    terapagos stellar
        53962
        

+++++++++other meta threats++++++++++
    rillaboom 
        8423
    ogerpon teal mask
        55488
    ogerpon hearthflame
        57038
    ogerpon cornerstone
        58595
    ogerpon wellspring
        60152
    incineroar
        3387
    flutter mane 
        61709
    farigiraf
        63102
    iron hands
        64964
    chien Pao 
        66461
    whimsicott
        67738
    urshifu - single strike
        73341
    urshifu rapid strike
        75986
    amoonguss
        78535
    indeedee female
        83954
    clefairy
        86059
    smeargle
        105920
    jumpluff
        108429
    raging bolt
        119241
    grimmsnarl
        120730
    chi yu 
        123331
    tornadus incarnate
    landorus incarnate and therian
    thundurus incarnate
    ursaluna (regular forme)
    ursaluna bloodmoon
    iron bundle 
    porygon2
    heatran
    gouging fire (will be legal!?!)
    dondozo
    tatsugiri
    archaludon 
    torkoal
    malamar
    dragonite
    weezing
    pelipper
    ninetails alolan
    roaring moon
    maushold

++++++ niche threats +++++++
    kingambit
    walking wake 
    Sinistcha
    charizard
    venasuar
    iron crown
    entei
    latias
    registeel
    iron boulder
    primarina
    venausaur
    araquanid
    porygonZ
    metagross
    annhilape
    blaziken
    goldengho
    arcanine
    hitmontop
    cresselia
    baxcalibur
    hisuian goodra
    sneasler
    gyarados
    komo-o
    snorlax
    milotic
    dusclops
    politoed
    ludicolo
    regieleki
    zapdos
    lilligant
    basculegion
    palafin
    glimmora
    armarouge
    ceruledge
    scizor
    volcarona 
    sylveon
    tyranitar
    excadrill
    scream tail












+++++++REQUIREMENTS++++++
   1. Show your understanding of basic data structures: arrays and objects
        using objects via pokemon class but arrays... - 
    2. Display a substantial amount of interesting data
        right now I only have ten - maube I should catalog all restricteds?
    3. Have two or more features that “operate” on your data,
        easy, order by stats ascending and descending
   4.  Look polished
    5. Be built from this starter code
        5.a. but you should be making significant changes and improvements
    6. Be an original website
    7. catalog and operations features on the front page of site and easily visible






++++++++++ TODO ++++++
    individual pkmn problems
        zacian and zamazenta id numbers from api are WRONG
            also calyrexes
            ogerpon not teal masks
            maybe terapagos'
            indeedee - bc female
    pokemon class
        need to make room for 3 potential abilities 
    side menu
        display
        functionality
            .sort()
                V8’s implementation of .sort() uses Timsort
            helper function for descending
                use a stack to reverse loaded pokemon
    json
        add mons 
        change file name

    mon cards
        change info displayed

    css
        make variables for primary and secondary colors
        sizing responsiveness and mobile view
            hamburger button yum


    stretch goals
        detail view - a page I think
            abilities
            moves - a class I think
                member variables    
                    accuracy
                    base power 
                    type
                    special/ physical (could be a boolean)
            in footer
                defensive relationships
                    function for defensive relationships
                offensive relationships
                    functin for offensive relationships

        side by side comparison view - another page
            like front page but mirrored down the middle


        search functionality via a binary search
        